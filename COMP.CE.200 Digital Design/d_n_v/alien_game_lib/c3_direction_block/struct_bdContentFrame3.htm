<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head>
<title></title>
<link rel="Stylesheet" title="hdl2html stylesheet" media="Screen" href="../../scripts/hdl2html.css">
<!-- Generated by HDL Designer -->
<!--    at 13:53:25 on  1.12.2023 -->
<script language='javascript'>
function pagesBtn() {
   return '';
}
function panelmenu() {
   return '';
}
</script>
</head>
<body>
<pre>
<span class=C>-- VHDL Entity alien_game_lib.c3_direction_block.symbol</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - koistin3.UNKNOWN (HTC219-310-SPC)</span>
<span class=C>--          at - 12:57:12 29.09.2023</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;

<span class=K>ENTITY</span> c3_direction_block <span class=K>IS</span>
   <span class=K>PORT</span>(
      clk       : <span class=A>IN</span>     <span class=T>std_logic</span>;
      rst_n     : <span class=A>IN</span>     <span class=T>std_logic</span>;
      x_coord_0 : <span class=A>IN</span>     <span class=T>std_logic</span>;
      x_coord_7 : <span class=A>IN</span>     <span class=T>std_logic</span>;
      direction : <span class=A>OUT</span>    <span class=T>std_logic</span>
   );

<span class=C>-- Declarations</span>

<span class=K>END</span> c3_direction_block ;

<span class=C>--</span>
<span class=C>-- VHDL Architecture alien_game_lib.c3_direction_block.struct</span>
<span class=C>--</span>
<span class=C>-- Created:</span>
<span class=C>--          by - koistin3.UNKNOWN (HTC219-304-SPC)</span>
<span class=C>--          at - 12:27:20 13.10.2023</span>
<span class=C>--</span>
<span class=C>-- Generated by Mentor Graphics' HDL Designer(TM) 2019.3 (Build 4)</span>
<span class=C>--</span>
<span class=K>LIBRARY</span> ieee;
<span class=K>USE</span> ieee.std_logic_1164.<span class=K>all</span>;
<span class=K>USE</span> ieee.std_logic_arith.<span class=K>all</span>;


<span class=K>ARCHITECTURE</span> struct <span class=K>OF</span> c3_direction_block <span class=K>IS</span>

   <span class=C>-- Architecture declarations</span>

   <span class=C>-- Internal signal declarations</span>
   <span class=K>SIGNAL</span> dout  : <span class=T>std_logic</span>;
   <span class=K>SIGNAL</span> dout1 : <span class=T>std_logic</span>;

   <span class=C>-- Implicit buffer signal declarations</span>
   <span class=K>SIGNAL</span> direction_internal : <span class=T>std_logic</span>;


   <span class=C>-- ModuleWare signal declarations(v1.12) for instance 'U_1' of 'adff'</span>
   <span class=K>SIGNAL</span> mw_U_1reg_cval : <span class=T>std_logic</span>;


<span class=K>BEGIN</span>

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_1' of 'adff'</span>
   direction_internal <= mw_U_1reg_cval;
   u_1seq_proc: <span class=K>PROCESS</span> (clk, rst_n)
   <span class=K>BEGIN</span>
      <span class=K>IF</span> (rst_n = '0') <span class=K>THEN</span>
         mw_U_1reg_cval <= '0';
      <span class=K>ELSIF</span> (clk'<span class=A>EVENT</span> <span class=K>AND</span> clk='1') <span class=K>THEN</span>
         mw_U_1reg_cval <= dout1;
      <span class=K>END</span> <span class=K>IF</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_1seq_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_2' of 'mux'</span>
   u_2combo_proc: <span class=K>PROCESS</span>(direction_internal, x_coord_7, dout)
   <span class=K>BEGIN</span>
      <span class=K>CASE</span> dout <span class=K>IS</span>
      <span class=K>WHEN</span> '0' => dout1 <= direction_internal;
      <span class=K>WHEN</span> '1' => dout1 <= x_coord_7;
      <span class=K>WHEN</span> <span class=K>OTHERS</span> => dout1 <= 'X';
      <span class=K>END</span> <span class=K>CASE</span>;
   <span class=K>END</span> <span class=K>PROCESS</span> u_2combo_proc;

   <span class=C>-- ModuleWare code(v1.12) for instance 'U_0' of 'or'</span>
   dout <= x_coord_0 <span class=K>OR</span> x_coord_7;

   <span class=C>-- Instance port mappings.</span>

   <span class=C>-- Implicit buffered output assignments</span>
   direction <= direction_internal;

<span class=K>END</span> struct;</pre>
<SCRIPT SRC="../../scripts/is.js"></SCRIPT><SCRIPT SRC="../../scripts/imageFrame.js"></SCRIPT>
</body>
